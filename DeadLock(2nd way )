
public class ThreadDeadLockExample {
	
	static Object lock1 = new Object();
	static Object lock2 = new Object();
	
	public static void main(String args[]) {
		
		Thread threadA = new Thread(new SharedResource(lock1,lock2));
		threadA.setName("FirstThread");
		threadA.start();
		
		
		
		
		Thread threadB = new Thread(new SharedResource(lock1,lock2));
		threadB.setName("SecondThread");
		threadB.start();
		
		
		
	}

}



class SharedResource implements Runnable{

	Object lock1;
	Object lock2;
	
	public SharedResource(Object lock1, Object lock2) {
		this.lock1 = lock1;
		this.lock2 = lock2;
	}

	public void run() {
		synchronized (lock1) {
		System.out.println(" Thread " + Thread.currentThread().getName()+" "+" acquired Lock lock1 " );
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			
		}
		
		synchronized (lock2) {
			System.out.println(" Thread " + Thread.currentThread().getName()+" "+" acquired Lock lock2 ");
			
		}
		
	}
	
	
}
